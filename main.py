prop_literals = {'addition(101)': 'addition_101', 'addition(61)': 'addition_61', 'addition(30)': 'addition_30', 'addition(169)': 'addition_169', 'addition(14)': 'addition_14', 'addition(189)': 'addition_189', 'addition(39)': 'addition_39', 'addition(3)': 'addition_3', 'addition(84)': 'addition_84', 'addition(91)': 'addition_91', 'addition(82)': 'addition_82', 'addition(58)': 'addition_58', 'addition(153)': 'addition_153', 'addition(178)': 'addition_178', 'addition(76)': 'addition_76', 'addition(195)': 'addition_195', 'digit(0,i3,4)': 'digit_0_i3_4', 'addition(10)': 'addition_10', 'addition(7)': 'addition_7', 'addition(6)': 'addition_6', 'digit(0,i2,9)': 'digit_0_i2_9', 'addition(56)': 'addition_56', 'addition(170)': 'addition_170', 'digit(0,i1,5)': 'digit_0_i1_5', 'addition(145)': 'addition_145', 'addition(126)': 'addition_126', 'digit(0,i2,1)': 'digit_0_i2_1', 'addition(110)': 'addition_110', 'addition(176)': 'addition_176', 'addition(108)': 'addition_108', 'addition(62)': 'addition_62', 'digit(0,i2,5)': 'digit_0_i2_5', 'addition(180)': 'addition_180', 'addition(152)': 'addition_152', 'digit(0,i1,7)': 'digit_0_i1_7', 'addition(0)': 'addition_0', 'addition(18)': 'addition_18', 'digit(0,i3,1)': 'digit_0_i3_1', 'addition(144)': 'addition_144', 'addition(94)': 'addition_94', 'addition(98)': 'addition_98', 'addition(22)': 'addition_22', 'addition(183)': 'addition_183', 'addition(177)': 'addition_177', 'addition(128)': 'addition_128', 'addition(50)': 'addition_50', 'addition(93)': 'addition_93', 'addition(13)': 'addition_13', 'addition(25)': 'addition_25', 'digit(0,i1,9)': 'digit_0_i1_9', 'addition(100)': 'addition_100', 'addition(49)': 'addition_49', 'addition(147)': 'addition_147', 'addition(106)': 'addition_106', 'addition(33)': 'addition_33', 'addition(113)': 'addition_113', 'digit(0,i4,1)': 'digit_0_i4_1', 'addition(17)': 'addition_17', 'addition(38)': 'addition_38', 'addition(73)': 'addition_73', 'addition(21)': 'addition_21', 'addition(45)': 'addition_45', 'addition(44)': 'addition_44', 'addition(4)': 'addition_4', 'addition(90)': 'addition_90', 'addition(104)': 'addition_104', 'addition(20)': 'addition_20', 'addition(54)': 'addition_54', 'addition(107)': 'addition_107', 'digit(0,i4,8)': 'digit_0_i4_8', 'addition(188)': 'addition_188', 'addition(164)': 'addition_164', 'addition(52)': 'addition_52', 'addition(156)': 'addition_156', 'addition(167)': 'addition_167', 'addition(175)': 'addition_175', 'addition(150)': 'addition_150', 'addition(162)': 'addition_162', 'addition(69)': 'addition_69', 'addition(134)': 'addition_134', 'addition(124)': 'addition_124', 'addition(123)': 'addition_123', 'addition(137)': 'addition_137', 'addition(125)': 'addition_125', 'addition(172)': 'addition_172', 'digit(0,i4,5)': 'digit_0_i4_5', 'digit(0,i4,9)': 'digit_0_i4_9', 'addition(75)': 'addition_75', 'addition(46)': 'addition_46', 'addition(194)': 'addition_194', 'addition(96)': 'addition_96', 'addition(191)': 'addition_191', 'addition(131)': 'addition_131', 'addition(146)': 'addition_146', 'digit(0,i1,8)': 'digit_0_i1_8', 'addition(121)': 'addition_121', 'addition(34)': 'addition_34', 'addition(57)': 'addition_57', 'addition(64)': 'addition_64', 'addition(78)': 'addition_78', 'digit(0,i2,7)': 'digit_0_i2_7', 'addition(122)': 'addition_122', 'addition(193)': 'addition_193', 'addition(157)': 'addition_157', 'digit(0,i4,3)': 'digit_0_i4_3', 'addition(51)': 'addition_51', 'digit(0,i1,6)': 'digit_0_i1_6', 'addition(15)': 'addition_15', 'addition(166)': 'addition_166', 'addition(165)': 'addition_165', 'addition(53)': 'addition_53', 'addition(173)': 'addition_173', 'addition(29)': 'addition_29', 'addition(197)': 'addition_197', 'digit(0,i2,4)': 'digit_0_i2_4', 'digit(0,i4,2)': 'digit_0_i4_2', 'addition(143)': 'addition_143', 'addition(132)': 'addition_132', 'addition(83)': 'addition_83', 'digit(0,i1,4)': 'digit_0_i1_4', 'addition(182)': 'addition_182', 'addition(184)': 'addition_184', 'addition(102)': 'addition_102', 'addition(185)': 'addition_185', 'addition(23)': 'addition_23', 'addition(181)': 'addition_181', 'digit(0,i4,6)': 'digit_0_i4_6', 'digit(0,i3,0)': 'digit_0_i3_0', 'addition(8)': 'addition_8', 'addition(87)': 'addition_87', 'digit(0,i4,4)': 'digit_0_i4_4', 'digit(0,i4,0)': 'digit_0_i4_0', 'addition(118)': 'addition_118', 'digit(0,i3,2)': 'digit_0_i3_2', 'addition(71)': 'addition_71', 'addition(133)': 'addition_133', 'addition(187)': 'addition_187', 'addition(151)': 'addition_151', 'addition(198)': 'addition_198', 'addition(168)': 'addition_168', 'addition(81)': 'addition_81', 'digit(0,i1,3)': 'digit_0_i1_3', 'digit(0,i2,6)': 'digit_0_i2_6', 'addition(136)': 'addition_136', 'addition(171)': 'addition_171', 'addition(174)': 'addition_174', 'addition(85)': 'addition_85', 'addition(158)': 'addition_158', 'addition(97)': 'addition_97', 'addition(186)': 'addition_186', 'addition(70)': 'addition_70', 'addition(120)': 'addition_120', 'digit(0,i2,2)': 'digit_0_i2_2', 'digit(0,i4,7)': 'digit_0_i4_7', 'addition(74)': 'addition_74', 'addition(159)': 'addition_159', 'addition(35)': 'addition_35', 'digit(0,i1,2)': 'digit_0_i1_2', 'addition(86)': 'addition_86', 'addition(9)': 'addition_9', 'addition(99)': 'addition_99', 'addition(105)': 'addition_105', 'addition(28)': 'addition_28', 'addition(42)': 'addition_42', 'addition(68)': 'addition_68', 'addition(142)': 'addition_142', 'addition(48)': 'addition_48', 'digit(0,i3,5)': 'digit_0_i3_5', 'addition(5)': 'addition_5', 'addition(66)': 'addition_66', 'addition(47)': 'addition_47', 'addition(77)': 'addition_77', 'digit(0,i3,8)': 'digit_0_i3_8', 'addition(89)': 'addition_89', 'addition(119)': 'addition_119', 'addition(12)': 'addition_12', 'addition(19)': 'addition_19', 'addition(67)': 'addition_67', 'addition(130)': 'addition_130', 'addition(127)': 'addition_127', 'addition(138)': 'addition_138', 'addition(41)': 'addition_41', 'addition(114)': 'addition_114', 'addition(179)': 'addition_179', 'addition(88)': 'addition_88', 'addition(65)': 'addition_65', 'addition(117)': 'addition_117', 'addition(112)': 'addition_112', 'addition(16)': 'addition_16', 'addition(163)': 'addition_163', 'addition(32)': 'addition_32', 'addition(109)': 'addition_109', 'addition(141)': 'addition_141', 'digit(0,i3,7)': 'digit_0_i3_7', 'addition(160)': 'addition_160', 'addition(80)': 'addition_80', 'addition(148)': 'addition_148', 'addition(116)': 'addition_116', 'digit(0,i1,1)': 'digit_0_i1_1', 'digit(0,i2,8)': 'digit_0_i2_8', 'addition(27)': 'addition_27', 'addition(63)': 'addition_63', 'addition(155)': 'addition_155', 'addition(161)': 'addition_161', 'addition(1)': 'addition_1', 'addition(192)': 'addition_192', 'addition(37)': 'addition_37', 'addition(43)': 'addition_43', 'addition(129)': 'addition_129', 'addition(40)': 'addition_40', 'addition(149)': 'addition_149', 'addition(2)': 'addition_2', 'addition(31)': 'addition_31', 'digit(0,i3,6)': 'digit_0_i3_6', 'addition(139)': 'addition_139', 'addition(26)': 'addition_26', 'addition(79)': 'addition_79', 'addition(196)': 'addition_196', 'addition(11)': 'addition_11', 'digit(0,i2,0)': 'digit_0_i2_0', 'addition(140)': 'addition_140', 'digit(0,i2,3)': 'digit_0_i2_3', 'addition(72)': 'addition_72', 'addition(111)': 'addition_111', 'addition(60)': 'addition_60', 'addition(115)': 'addition_115', 'addition(59)': 'addition_59', 'addition(92)': 'addition_92', 'addition(190)': 'addition_190', 'digit(0,i1,0)': 'digit_0_i1_0', 'addition(95)': 'addition_95', 'addition(36)': 'addition_36', 'digit(0,i3,3)': 'digit_0_i3_3', 'addition(55)': 'addition_55', 'addition(103)': 'addition_103', 'addition(135)': 'addition_135', 'addition(24)': 'addition_24', 'addition(154)': 'addition_154', 'digit(0,i3,9)': 'digit_0_i3_9'}


with open('formula_mnist2.txt') as f:
    formula_string = f.read()

sdd_vars = {value:None  for value in prop_literals.values()}
num_vars = (len(prop_literals))

from pysdd.sdd import SddManager, Vtree, CompilerOptions
vtree = Vtree(var_count=num_vars, vtree_type="balanced")
sdd = SddManager.from_vtree(vtree)

new_options = CompilerOptions(vtree_search_mode=0)
sdd.set_options(new_options)

var_mapping = {}
for var,sdd_var in zip(sdd_vars, sdd.vars):
    exec(f'{var} = sdd_var')
    var_mapping[sdd_var.literal] = var

print('creating SDD...')
breakpoint()
import sys
sys.setrecursionlimit(30000)
formula = eval(formula_string)

# Model Counting
wmc = formula.wmc(log_mode=False)
print(f"Model Count: {wmc.propagate()}")
print('SDD created')
